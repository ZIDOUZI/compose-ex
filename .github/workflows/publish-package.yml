name: Publish Package

on:
  release:
    types: [created]
  # 也可以手动触发工作流
  workflow_dispatch:

jobs:
  publish-android-library:
    name: 发布 Android 库
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
      
      - name: 设置 JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      
      - name: 授予 Gradle 执行权限
        run: chmod +x gradlew
      
      - name: 获取最新 Tag 作为版本号
        id: get_version
        run: |
          # 如果是由 release 触发，则使用该 release 的 tag
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "RELEASE_VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
            echo "使用 release 触发的 tag: ${{ github.event.release.tag_name }}"
          else
            # 否则获取最新的 tag
            git fetch --prune --unshallow --tags
            LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
            # 移除可能的 'v' 前缀
            LATEST_TAG=${LATEST_TAG#v}
            echo "RELEASE_VERSION=${LATEST_TAG}" >> $GITHUB_ENV
            echo "使用最新的 tag: ${LATEST_TAG}"
          fi
      
      - name: 构建项目
        run: ./gradlew build
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
      
      - name: 发布到 GitHub Packages
        run: |
          # 更新 gradle.properties 添加 GitHub Packages 仓库信息
          # 首先确保文件以空行结尾
          echo "" >> gradle.properties
          echo "gpr.user=${{ github.actor }}" >> gradle.properties
          echo "gpr.key=${{ secrets.GITHUB_TOKEN }}" >> gradle.properties
          # 发布库
          ./gradlew publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}

  # 如果需要发布到 Maven Central，可以添加以下任务
  # publish-to-maven-central:
  #   name: 发布到 Maven Central
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     
  #     - name: 设置 JDK
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'
  #         server-id: ossrh
  #         server-username: MAVEN_USERNAME
  #         server-password: MAVEN_PASSWORD
  #     
  #     - name: 授予 Gradle 执行权限
  #       run: chmod +x gradlew
  #     
  #     - name: 发布到 Maven Central
  #       run: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository
  #       env:
  #         MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  #         MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
  #         SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
  #         SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
  #         SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
